Level 1

Q1
Расскажите, чем, на ваш взгляд, отличается хорошая верстка от плохой с точки зрения
    - пользователя;
    - менеджера проекта;
    - дизайнера;
    - верстальщика;
    - клиентского программиста;
    - серверного программиста.

A1
На мой взгляд, отличие заключается:
    - для пользователя:
        В отображении страницы - растянутые кривые изображения (очевидное несоответствие пропорций, пикселизация), не интуитивно понятный интерфейс (для примера, предполагаемая на первый взгляд кнопка не производит никаких действий), некорректное отображение на устройствах, помимо десктопного разрешения (например, "поехавшие" блоки, огромные пустые пространства, которые явно должны быть чем-то заполнены, лишний горизонтальный скролл). Против приятной, интуитивно понятной верстки с корректным отображением содержимого.
    - для менеджера проекта:
        (Могу предположить.)
        В несоответствии реализации изначальному макету или слишком сильные отступления, нарушающие предполагаемую концепцию и поведение сайта.
    - для дизайнера:
        (Допускаю, что отображение более-менее соответствует макету.)
        - в слишком сильных отступлениях от созданного дизайна;
        - в неправильно (по мнению дизайнера) подобранная анимация, если это не было оговорено или обозначено в макете;
        - возможно, в неправильно отмеренных отступах между блоками, в тексте и прочих мелких огрехах при верстке.
    - для верстальщика:
        (Предполагаю, что использование тегов соответствует семантике.)
        - в излишнем использовании id-атрибутов вместо классов;
        - в именовании классов не по выбранной методологии. Если же методология не применялась, в бессистемном именовании классов, не отражающем суть элементов и цель именования;
        - в отсутствии комментариев, если проект достаточно большой и требует пояснения хотя бы в подписании блоков кода;
        - в излишнем комментировании, например, когда подписывается каждый блок и каждая строка, несмотря на интуитивно понятную суть данных блоков/строк;
        - в дублировании кода, которого можно избежать при использовании шаблонизаторов и препроцессоров. Либо неправильное/недостаточное использование таковых;
        - если речь о JS, в излишнем использовании глобальных переменных вместо локальных, что может частично вызвать лишнюю нагрузку на сервер и, как следствие, более медленную загрузку;
        - в смешении использованных технологий, как например, одновременно верстка гридами, флексами, флоатами. Это технически возможно, но стоит придерживаться одного формата;
        - все остальные минусы относятся скорее к корпоративной разработке, как то, несоответствие верстки принятой в компании/команде методологии, именовании, структуризации проекта по каталогам и пр.
    - для клиентского программиста:
        Не могу даже предположить, к сожалению.
    - для серверного программиста:
        (Могу предположить.)
        В некорректном использовании и "нечитаемом" именовании id-атрибутов и классов.

Q2
Опишите основные особенности верстки крупных многостраничных сайтов, дизайн которых может меняться в процессе реализации и поддержки.
Расскажите о своем опыте верстки подобных сайтов: какие методологии, инструменты и технологии вы применяли на практике.

A2
У меня не было опыта разработких больших многостраничных сайтов, потому могу предположительно рассуждать.

- Вероятно, очень желательно или требуется использование методологии, например, БЭМ, которая позволяет создавать обособленные друг от друга логические блоки и затем применять их в необходимом месте на той же или другой странице при одинаковом именовании классов данного блока. То есть грамотное применение БЭМ позволяет задать один раз стили для условной кнопки, а задание её на другой странице и присваивание её соответствующего класса сразу стилизует её нужным образом, останется добавить уникальные для именно данной кнопки стили.

- Необходимо грамотное комментирование кода.

В своих задачах я стараюсь применять БЭМ, учусь именованию классов.

Q3
Опишите основные особенности верстки сайтов, которые должны одинаково хорошо отображаться как на любом современном компьютере, так и на смартфонах и планшетах под управлением iOS и Android. Расскажите о своем опыте верстки подобных сайтов: какие инструменты и технологии вы применяли, как проверяли результат на различных устройствах, какие именно устройства требовалось поддерживать.

A3
- Специфика корректного отображения сайта на различных устройствах заключается в responsible ("резиновой") и adaptive верстке. Адаптивная верстка через @media-запросы меняет отображение проекта на различных разрешениях экранов устройств. Резиновая верстка позволяет отображать ваш проект на любом разрешении (кроме основных - 320px, 768px, 1024px, 1440px etc.) хотя бы более-менее подходящим образом и единообразно.

- Кроссбраузерность требует применения специфических для конкретных браузеров префиксов, таких как -webkit-, -moz-, -ms-, а также дополлнительного тестирования сайта.

- Отображение на Android ничем не отличается от отображения на десктопе, что позволяет тестировать проект в любом разрешении. iOS (Safari) использует ретиновую графику и отличительные от Chrome стандартные размеры, что влияет на отображение картинок и элементов.
Я столкнулся в своей работе с некорректно задаваемой height при отображении сайта на Safari. Подручного iOS устройства не имел, нашел неплохой сайт, эмулирующий систему iOS почти с любым устройством (https://appetize.io/demo?device=iphone6s&scale=75&orientation=portrait&osVersion=13.3). С его помощью заходил на свой сайт, предварительно загруженный на хостинг, и проверял отображение. Насчет ретиновой графики - не сталкивался, но читал информацию на форумах. Как я понял, один из вариантов корректного отображения - проверка User-Agent пользователя и отображение для iOS устройств специально созданных заранее изображений большего разрешения.

Мой проект имеется в текущем репозитории, в папке test-SP. Также его можно просмотреть по адресу https://templates.just-invest.ru/silla/

Q4
Расскажите, какие инструменты помогают вам экономить время в процессе написания, проверки, отладки кода.

A4
Я пользуюсь Sublime Text 3 с установленными плагинами, такими как Emmet, ColorPicker, JavaScript & NodeJS Snippets, Pug, Sass и прочими декоративными. Также учусь применять Pug и Sass. Использую Prepros, который автоматически собирает мой проект (.pug, .scss) в нужный формат и отображает его в браузере с помощью LivePreview, в нем также имеется логгирование и проверка кода на ошибки, что позволяет не искать вручную пропущенную скобку. С отладкой я не знаком в теории, для проверки кода пользуюсь google devtools, вкладка console в основном, изредка sources.

Q5
Вам нужно понять, почему страница отображается некорректно в Safari на iOS и в IE на Windows. Код писали не вы, доступа к исходникам у вас нет. Ваши действия? Сталкивались ли вы с подобными проблемами на практике?

A5
Дорабатывать чей-то проект мне не приходилось, потому могу только рассуждать.

Во-первых, если речь о верстке, код я могу увидеть через devtools, скопировать и постараться поработать с ним, также на вкладке sources имееется JS-код, его тоже можно забрать и проверить на локалке. С помощью того же devtools можно проверить вкладку console и там найти множество ошибок без копирования кода себе, например, некорректные пути до файлов стилей, скриптов или изображений. Касательно Safari знаком не сильно, но если используется IE старой версии, вполне возможно, что верстка создавалась для полсдених версий браузеров, без адаптации для старых. Необходим рефакторинг всего кода.

Во-вторых, если речь не о верстке, возможно, на сайте присутствует SSL, который конфликтует с mixed content - ссылками по http в коде. Достаточно их исправить или указать относительные, если возможно.
К сожалению, больше предположений у меня нет.

Q6
Дизайнер отдал вам макет, в котором не показано, как должны выглядеть интерактивные элементы при наведении мыши. Ваши действия?

A6
В первую очередь отпишусь дизайнеру. Если возможности связаться с ним здесь и сейчас нет, то я бы добавил простую анимацию, подходящую, на мой взгляд, данному элементу, чтобы не тратить на неё много времени в том случае, если я ошибся и дизайнер предполагает другую (что мы выясним с ним рано или поздно). В то же время интерактивный элемент в выполненном проекте явно будет выделяться созданной анимацией.
Мне кажется, это оптимальный вариант.

Q7
Какие ресурсы вы используете для развития в профессиональной сфере? Приведите несколько конкретных примеров (сайты, блоги и так далее).

Какие направление развития вам более близко: JS-программирование, HTML/CSS-верстка или и то, и другое?

Какие ещё области знаний, кроме тех, что непосредственно относятся к работе, вам интересны?

A7
Конечно же Google в первую очередь. Чаще всего мне нужны такие сайты как:
    - learn.javascript.ru вкупе с developer.mozilla.org - для JS;
    - webref.ru, htmlbook.ru - для HTML, CSS;
    - Google часто приводит меня на habr.com и stackoverflow.com;
    - Часто, когда устаю читать или не понимаю прочитанное, пользуюсь видеоуроками на Youtube. Помимо найденных видео в простом поиске мне нравятся каналы "WebDeveloperBlog" (уроки по JS, HTML, CSS, SASS и т.д.) и "WebDev с нуля. Канал Алекса Лущенко" - автор подробно, лаконично и доступно объясняет JS. Кажется, там есть и другие уроки, например, PHP, NodeJS, HTML, но я столкнулся пока только с JS, и материал очень крутой.

На данный момент по знаниям мне ближе верстка на HTML, CSS + минимальный JS. Хочется впоследствии познать JS на хорошем уровне и затем, возможно, перейти в разработчики JS. Благо, язык позволяет создавать ПО практически для всего. Так что в общем и целом могу сказать, что интересны оба направления.

Помимо фронтенда мне интересна работа с графикой (Photoshop, Illstrator), видео (-обработка/-монтаж. Premier Pro, After Effects) и создание музыки (FL Studio). Мой слабенький на текущий момент ноутбук не позволяет работать с большинством из названного. Если совсем отдаляться от IT, я заинтересован в грамотном инвестировании в фондовый рынок и в теме финансовой грамотности, пожертвованиях на благо животных приютов и экологических организаций, в живой музыке (имею гитару, хочу приобрести синтезатор), в психологии, в изучении иностранных языков.

Q8
Расскажите нам о себе и предоставьте несколько ссылок на последние работы, выполненные вами.

A8
Меня зовут Андрей, мне 25 лет, живу в городе Самара более 7 лет. Я люблю музыку, психологию, выращиваю на подоконнике финики и авокадо, обожаю мопсов. Есть замечательный профиль в Инстаграме и Тик-токе (простите) - pug_leonid. Леонид Васильевич - очень смешной толстый мопс с не менее забавным хозяином, который одевает Лёню в костюмы Дарта Вейдера, Чужого, Магистра Йоды, посмотрите пару видео!

На данный момент работаю в поддержке клиентов в компании-регистраторе доменов и определенное время назад четко ощутил отсутствие развития на должности, но яркое и сильное выгорание. Со школы был заинтересован в создании сайтов, но путь мой оказался медленным и слишком постепенным - при отсутствии конкретной задачи я "плавал" в потоке информации и откладывал на потом. Текущие обстоятельства и возраст заставили задуматься о смене сферы деятельности.

Свободное от работы время я теперь посвящаю HTML, CSS и JS. Совсем немного пытаюсь в PHP, но так было необходмо по одному из ТЗ, мне всё же ближе JS. Были идеи по созданию собственного регистратора (партнёра); сайта для "парсинга" города на предмет наличия ивентов на текущий и пару ближайших вечеров, чтобы люди могли зайти на сервис и выбрать для себя занятие по душе; собственного сайта-портфеля, в котором я отмечал бы приобретенные ценные бумаги, доходность, графики и состав портфеля.
Ничего из этого не выполнено в силу недостаточных знаний в JS на данный момент.

Мои последние работы я загрузил на github-репозиторий по ссылке https://github.com/selfmotivation/test-tasks
Здесь по папкам разбил тестовые задания, выполненные для различных компаний, в том числе и для вас :) (в работе) Для каждого проекта есть отдельная страница на моем хостинге:
    - для test-LP: https://just-invest.ru/lider/
    - для test-SP: https://templates.just-invest.ru/silla/
    - для вас (test-FB): https://templates.just-invest.ru/nyamushka/
    
Также в моем профиле есть открытые репозитории с выполненными заданиями прошлого потока RSSchool. Более-менее адекватный из них это репозиторий https://github.com/selfmotivation/singolo (бардак в master задуман по заданию, требовалось создать отдельные страницы). (К слову, я записался на новый поток с 6.09 и планирую показать там лучшие результаты.)
Ссылка на рабочую страницу - https://selfmotivation.github.io/singolo/
На момент создания я был плохо знаком с Flex и JS не использовал. 


Спасибо за то, что ознакомились с моим резюме :)
